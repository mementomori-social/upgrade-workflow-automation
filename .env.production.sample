# Mastodon Production Environment Configuration
# Copy this file to .env.production and customize for your setup
# Used by: mastodon-upgrade-production.sh

# =============================================================================
# PRODUCTION SETTINGS
# =============================================================================

# Path to PRODUCTION Mastodon installation
PRODUCTION_MASTODON_DIR="/home/mastodon/live"

# Your Mastodon user (usually "mastodon")
MASTODON_USER="mastodon"

# Your PRODUCTION instance API URL
API_URL="https://your-instance.com/api/v1/instance"

# Your fork repository (organization/repo-name)
# This is used to identify which git remote points to YOUR fork
# The script will match this against remote URLs, not remote names
# Example: "mementomori-social/mastodon" will match git@github.com:mementomori-social/mastodon.git
YOUR_FORK_REPO="your-org/mastodon"

# Official Mastodon repository (usually not changed)
# This is informational - the script primarily uses YOUR_FORK_REPO to find your fork
OFFICIAL_MASTODON_REPO="mastodon/mastodon"

# Node.js version (should match production)
NODE_VERSION="22.18.0"

# Scripts directory path
SCRIPTS_DIR="/home/mastodon/upgrade-workflow-automation"

# =============================================================================
# DATABASE BACKUP SETTINGS
# =============================================================================

# Database server settings for backups
DB_HOST="your.db.server.ip"
DB_PORT="5432"
DB_USER="your-db-user"
BACKUP_DIR="/path/to/backups"

# =============================================================================
# INSTANCE URLs
# =============================================================================

# Production instance URLs
INSTANCE_URL="https://your-instance.com"
STATUS_URL="https://status.your-instance.com"
MAINTENANCE_URL="https://your-status-page-url/maintenances"

# Optional settings
# Ruby version management
# RBENV_ROOT="/home/mastodon/.rbenv"

# Log file location
# UPGRADE_LOG="$HOME/mastodon-upgrades.log"

# Git remote names (auto-detected, but can override)
# ORIGIN_REMOTE="origin"
# UPSTREAM_REMOTE="upstream"

# Service names
# MASTODON_SERVICES="mastodon-web mastodon-sidekiq mastodon-streaming"

# Elasticsearch settings
# AUTO_START_ELASTICSEARCH=true
# SEARCH_CONCURRENCY=16
# SEARCH_BATCH_SIZE=4096