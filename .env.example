# Mastodon Upgrade Workflow Configuration
# Copy this file to .env and customize for your setup

# Local environment
# Path to your local Mastodon installation
MASTODON_DIR="/opt/mastodon"

# Your Mastodon user (usually "mastodon")
MASTODON_USER="mastodon"

# Your instance API URL for version detection
API_URL="https://your-instance.com/api/v1/instance"

# Your fork repository (organization/repo-name)
GITHUB_REPO="your-org/mastodon"

# Upstream repository
UPSTREAM_REPO="mastodon/mastodon"

# Production environment
# Path to production Mastodon installation
PRODUCTION_MASTODON_DIR="/home/mastodon/live"

# Database server settings for backups
DB_HOST="your.db.server.ip"
DB_PORT="36424"
DB_USER="your-db-user"
BACKUP_DIR="/path/to/backups"

# Optional settings
# Ruby version management
# RBENV_ROOT="/home/mastodon/.rbenv"

# Node.js version (should match production)
NODE_VERSION="22.18.0"

# Scripts directory path
SCRIPTS_DIR="/home/mastodon/upgrade-workflow-automation"

# Instance URLs
INSTANCE_URL="https://your-instance.com"
TEST_URL="https://your-test-instance.com"
STATUS_URL="https://status.your-instance.com"
MAINTENANCE_URL="https://your-status-page-url/maintenances"

# Custom restart command (if not using default systemctl)
# RESTART_COMMAND="/usr/local/bin/restart-mastodon"

# Log file location
# UPGRADE_LOG="$HOME/mastodon-upgrades.log"

# Git remote names
# These are auto-detected, but you can override if needed
# ORIGIN_REMOTE="origin"
# UPSTREAM_REMOTE="upstream"

# Service names
# Mastodon services to manage (space-separated)
# MASTODON_SERVICES="mastodon-web mastodon-sidekiq mastodon-streaming"

# Elasticsearch
# Whether to start Elasticsearch automatically
# AUTO_START_ELASTICSEARCH=true

# Concurrency settings for search rebuild
# SEARCH_CONCURRENCY=16
# SEARCH_BATCH_SIZE=4096
